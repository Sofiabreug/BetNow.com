-- Tabela ACCOUNTS
CREATE TABLE ACCOUNTS (
    id NUMBER PRIMARY KEY,
    completeName VARCHAR2(100) NOT NULL,
    email VARCHAR2(100) NOT NULL UNIQUE,
    password VARCHAR2(100) NOT NULL,
    birthDate DATE NOT NULL,
    token VARCHAR2(32) NOT NULL,
    balance NUMBER(10, 2)
);

COMMIT;
SELECT * FROM ACCOUNTS;
DROP TABLE ACCOUNTS;
DESCRIBE ACCOUNTS;

-- Tabela EVENTS
CREATE TABLE EVENTS (
    id NUMBER PRIMARY KEY,
    title VARCHAR2(50) NOT NULL,
    description VARCHAR2(150),
    ticketValue NUMBER(10, 2) NOT NULL,
    startDate DATE NOT NULL,
    endDate DATE NOT NULL,
    eventDate DATE NOT NULL,
    status VARCHAR2(20) DEFAULT 'pendente',
    verdict VARCHAR2(3) CHECK (verdict IN ('sim', 'não'))
);

-- Tabela BETS
CREATE TABLE BETS (
    id NUMBER PRIMARY KEY,
    accountId NUMBER NOT NULL,
    eventId NUMBER NOT NULL,
    betValue NUMBER(10, 2) NOT NULL,
    FOREIGN KEY (accountId) REFERENCES ACCOUNTS(id),
    FOREIGN KEY (eventId) REFERENCES EVENTS(id)
);

-- Tabela MODERATORS
CREATE TABLE MODERATORS (
    moderatorId NUMBER PRIMARY KEY,
    name VARCHAR2(100) NOT NULL
);

-- Sequência para IDs
CREATE SEQUENCE SEQ_ACCOUNTS START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_EVENTS START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_BETS START WITH 1 INCREMENT BY 1;